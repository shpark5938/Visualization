{"remainingRequest":"/Users/sohyun/Desktop/school/vue-white-dashboard/node_modules/babel-loader/lib/index.js!/Users/sohyun/Desktop/school/vue-white-dashboard/node_modules/eslint-loader/index.js??ref--13-0!/Users/sohyun/Desktop/school/vue-white-dashboard/src/components/NotificationPlugin/index.js","dependencies":[{"path":"/Users/sohyun/Desktop/school/vue-white-dashboard/src/components/NotificationPlugin/index.js","mtime":1639670676986},{"path":"/Users/sohyun/Desktop/school/vue-white-dashboard/babel.config.js","mtime":1639308038320},{"path":"/Users/sohyun/Desktop/school/vue-white-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sohyun/Desktop/school/vue-white-dashboard/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/sohyun/Desktop/school/vue-white-dashboard/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["// import Notifications from './Notifications.vue';\n// const NotificationStore = {\n//   state: [], // here the notifications will be added\n//   settings: {\n//     overlap: false,\n//     verticalAlign: 'top',\n//     horizontalAlign: 'right',\n//     type: 'info',\n//     timeout: 5000,\n//     closeOnClick: true,\n//     showClose: true\n//   },\n//   setOptions(options) {\n//     this.settings = Object.assign(this.settings, options);\n//   },\n//   removeNotification(timestamp) {\n//     const indexToDelete = this.state.findIndex(n => n.timestamp === timestamp);\n//     if (indexToDelete !== -1) {\n//       this.state.splice(indexToDelete, 1);\n//     }\n//   },\n//   addNotification(notification) {\n//     if (typeof notification === 'string' || notification instanceof String) {\n//       notification = { message: notification };\n//     }\n//     notification.timestamp = new Date();\n//     notification.timestamp.setMilliseconds(\n//       notification.timestamp.getMilliseconds() + this.state.length\n//     );\n//     notification = Object.assign({}, this.settings, notification);\n//     this.state.push(notification);\n//   },\n//   notify(notification) {\n//     if (Array.isArray(notification)) {\n//       notification.forEach(notificationInstance => {\n//         this.addNotification(notificationInstance);\n//       });\n//     } else {\n//       this.addNotification(notification);\n//     }\n//   }\n// };\n// const NotificationsPlugin = {\n//   install(Vue, options) {\n//     let app = new Vue({\n//       data: {\n//         notificationStore: NotificationStore\n//       },\n//       methods: {\n//         notify(notification) {\n//           this.notificationStore.notify(notification);\n//         }\n//       }\n//     });\n//     // Vue.prototype.$notify = app.notify;\n//     // Vue.prototype.$notifications = app.notificationStore;\n//     // Vue.component('Notifications', Notifications);\n//     if (options) {\n//       NotificationStore.setOptions(options);\n//     }\n//   }\n// };\n// export default NotificationsPlugin;",{"version":3,"sources":["/Users/sohyun/Desktop/school/vue-white-dashboard/src/components/NotificationPlugin/index.js"],"names":[],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import Notifications from './Notifications.vue';\n\n// const NotificationStore = {\n//   state: [], // here the notifications will be added\n//   settings: {\n//     overlap: false,\n//     verticalAlign: 'top',\n//     horizontalAlign: 'right',\n//     type: 'info',\n//     timeout: 5000,\n//     closeOnClick: true,\n//     showClose: true\n//   },\n//   setOptions(options) {\n//     this.settings = Object.assign(this.settings, options);\n//   },\n//   removeNotification(timestamp) {\n//     const indexToDelete = this.state.findIndex(n => n.timestamp === timestamp);\n//     if (indexToDelete !== -1) {\n//       this.state.splice(indexToDelete, 1);\n//     }\n//   },\n//   addNotification(notification) {\n//     if (typeof notification === 'string' || notification instanceof String) {\n//       notification = { message: notification };\n//     }\n//     notification.timestamp = new Date();\n//     notification.timestamp.setMilliseconds(\n//       notification.timestamp.getMilliseconds() + this.state.length\n//     );\n//     notification = Object.assign({}, this.settings, notification);\n//     this.state.push(notification);\n//   },\n//   notify(notification) {\n//     if (Array.isArray(notification)) {\n//       notification.forEach(notificationInstance => {\n//         this.addNotification(notificationInstance);\n//       });\n//     } else {\n//       this.addNotification(notification);\n//     }\n//   }\n// };\n\n// const NotificationsPlugin = {\n//   install(Vue, options) {\n//     let app = new Vue({\n//       data: {\n//         notificationStore: NotificationStore\n//       },\n//       methods: {\n//         notify(notification) {\n//           this.notificationStore.notify(notification);\n//         }\n//       }\n//     });\n//     // Vue.prototype.$notify = app.notify;\n//     // Vue.prototype.$notifications = app.notificationStore;\n//     // Vue.component('Notifications', Notifications);\n//     if (options) {\n//       NotificationStore.setOptions(options);\n//     }\n//   }\n// };\n\n// export default NotificationsPlugin;\n"]}]}